package com.brobston.indelible.processor.pre.antlr.event;

/*
 * Indelible: to counteract type erasure.
 * Copyright Â© 2014, Brobston Development, Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of either the GNU General Public
 * License, version 2, or the three-clause BSD License, at your
 * option.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License or the BSD License for more details.
 */

import org.antlr.v4.runtime.ParserRuleContext;

/**
 * An event interface for individual code processors to use
 * for receiving events from the Antlr parse listener.
 *
 * @author Andrew Brobston
 */
public interface ParserEvent<T extends ParserRuleContext> {
    /**
     * Gets the parser rule context that was passed to the
     * Antlr-generated listener.
     *
     * @return An object extending ParserRuleContext that was passed
     * to the Antlr-generated listener
     */
    T getParserRuleContext();

    /**
     * Indicates whether the listener event is "enter" or "exit."
     * The Antlr-generated listener generates methods for both
     * entering and exiting a node, and the event consumer likely
     * needs to know which one is occurring.
     *
     * @return {@code true} if the event was generated by exiting a node;
     * {@code false} if the event was generated by entering a node
     */
    boolean isExitEvent();
}
